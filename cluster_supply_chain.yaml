---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
    kapp.k14s.io/identity: v1;/apiextensions.k8s.io/CustomResourceDefinition/clustersupplychains.carto.run;apiextensions.k8s.io/v1
    kapp.k14s.io/original: '{"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.7.0"},"creationTimestamp":null,"labels":{"kapp.k14s.io/app":"1636132334674441536","kapp.k14s.io/association":"v1.2e49bc4324c1c9d42087a5df7b9b80ce"},"name":"clustersupplychains.carto.run"},"spec":{"group":"carto.run","names":{"kind":"ClusterSupplyChain","listKind":"ClusterSupplyChainList","plural":"clustersupplychains","singular":"clustersupplychain"},"scope":"Cluster","versions":[{"name":"v1alpha1","schema":{"openAPIV3Schema":{"properties":{"apiVersion":{"description":"APIVersion
      defines the versioned schema of this representation of an object. Servers should
      convert recognized schemas to the latest internal value, and may reject unrecognized
      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind
      is a string value representing the REST resource this object represents. Servers
      may infer this from the endpoint the client submits requests to. Cannot be updated.
      In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"properties":{"resources":{"items":{"properties":{"configs":{"items":{"properties":{"name":{"type":"string"},"resource":{"type":"string"}},"required":["name","resource"],"type":"object"},"type":"array"},"images":{"items":{"properties":{"name":{"type":"string"},"resource":{"type":"string"}},"required":["name","resource"],"type":"object"},"type":"array"},"name":{"type":"string"},"params":{"items":{"properties":{"name":{"type":"string"},"value":{"x-kubernetes-preserve-unknown-fields":true}},"required":["name","value"],"type":"object"},"type":"array"},"sources":{"items":{"properties":{"name":{"type":"string"},"resource":{"type":"string"}},"required":["name","resource"],"type":"object"},"type":"array"},"templateRef":{"properties":{"kind":{"enum":["ClusterSourceTemplate","ClusterImageTemplate","ClusterTemplate","ClusterConfigTemplate"],"type":"string"},"name":{"minLength":1,"type":"string"}},"required":["kind","name"],"type":"object"}},"required":["name","templateRef"],"type":"object"},"type":"array"},"selector":{"additionalProperties":{"type":"string"},"type":"object"}},"required":["resources","selector"],"type":"object"},"status":{"properties":{"conditions":{"items":{"description":"Condition
      contains details for one aspect of the current state of this API Resource. ---
      This struct is intended for direct use as an array at the field path .status.conditions.  For
      example, type FooStatus struct{     // Represents the observations of a foo''s
      current state.     // Known .status.conditions.type are: \"Available\", \"Progressing\",
      and \"Degraded\"     // +patchMergeKey=type     // +patchStrategy=merge     //
      +listType=map     // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\"
      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
      \n     // other fields }","properties":{"lastTransitionTime":{"description":"lastTransitionTime
      is the last time the condition transitioned from one status to another. This
      should be when the underlying condition changed.  If that is not known, then
      using the time when the API field changed is acceptable.","format":"date-time","type":"string"},"message":{"description":"message
      is a human readable message indicating details about the transition. This may
      be an empty string.","maxLength":32768,"type":"string"},"observedGeneration":{"description":"observedGeneration
      represents the .metadata.generation that the condition was set based upon. For
      instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
      is 9, the condition is out of date with respect to the current state of the
      instance.","format":"int64","minimum":0,"type":"integer"},"reason":{"description":"reason
      contains a programmatic identifier indicating the reason for the condition''s
      last transition. Producers of specific condition types may define expected values
      and meanings for this field, and whether the values are considered a guaranteed
      API. The value should be a CamelCase string. This field may not be empty.","maxLength":1024,"minLength":1,"pattern":"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$","type":"string"},"status":{"description":"status
      of the condition, one of True, False, Unknown.","enum":["True","False","Unknown"],"type":"string"},"type":{"description":"type
      of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type
      values are consistent across resources like Available, but because arbitrary
      conditions can be useful (see .node.status.conditions), the ability to deconflict
      is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)","maxLength":316,"pattern":"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$","type":"string"}},"required":["lastTransitionTime","message","reason","status","type"],"type":"object"},"type":"array"},"observedGeneration":{"format":"int64","type":"integer"}},"type":"object"}},"required":["metadata","spec"],"type":"object"}},"served":true,"storage":true,"subresources":{"status":{}}}]},"status":{"acceptedNames":{"kind":"","plural":""},"conditions":[],"storedVersions":[]}}'
    kapp.k14s.io/original-diff-md5: 6b638eeb5a0f6a4d7e3c12eb5bcaa34a
  creationTimestamp: "2021-11-05T17:12:44Z"
  generation: 1
  labels:
    kapp.k14s.io/app: "1636132334674441536"
    kapp.k14s.io/association: v1.2e49bc4324c1c9d42087a5df7b9b80ce
  name: clustersupplychains.carto.run
  resourceVersion: "35744"
  uid: 9d0fe93e-5e71-4238-b5ed-1006da7fb1dc
spec:
  conversion:
    strategy: None
  group: carto.run
  names:
    kind: ClusterSupplyChain
    listKind: ClusterSupplyChainList
    plural: clustersupplychains
    singular: clustersupplychain
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              resources:
                items:
                  properties:
                    configs:
                      items:
                        properties:
                          name:
                            type: string
                          resource:
                            type: string
                        required:
                        - name
                        - resource
                        type: object
                      type: array
                    images:
                      items:
                        properties:
                          name:
                            type: string
                          resource:
                            type: string
                        required:
                        - name
                        - resource
                        type: object
                      type: array
                    name:
                      type: string
                    params:
                      items:
                        properties:
                          name:
                            type: string
                          value:
                            x-kubernetes-preserve-unknown-fields: true
                        required:
                        - name
                        - value
                        type: object
                      type: array
                    sources:
                      items:
                        properties:
                          name:
                            type: string
                          resource:
                            type: string
                        required:
                        - name
                        - resource
                        type: object
                      type: array
                    templateRef:
                      properties:
                        kind:
                          enum:
                          - ClusterSourceTemplate
                          - ClusterImageTemplate
                          - ClusterTemplate
                          - ClusterConfigTemplate
                          type: string
                        name:
                          minLength: 1
                          type: string
                      required:
                      - kind
                      - name
                      type: object
                  required:
                  - name
                  - templateRef
                  type: object
                type: array
              selector:
                additionalProperties:
                  type: string
                type: object
            required:
            - resources
            - selector
            type: object
          status:
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                format: int64
                type: integer
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ClusterSupplyChain
    listKind: ClusterSupplyChainList
    plural: clustersupplychains
    singular: clustersupplychain
  conditions:
  - lastTransitionTime: "2021-11-05T17:12:50Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2021-11-05T17:12:52Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1alpha1
